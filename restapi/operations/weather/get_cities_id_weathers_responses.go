// Code generated by go-swagger; DO NOT EDIT.

package weather

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Wuzi/pay-test-go/models"
)

// GetCitiesIDWeathersOKCode is the HTTP code returned for type GetCitiesIDWeathersOK
const GetCitiesIDWeathersOKCode int = 200

/*GetCitiesIDWeathersOK Return an array of weathers of a single city

swagger:response getCitiesIdWeathersOK
*/
type GetCitiesIDWeathersOK struct {

	/*
	  In: Body
	*/
	Payload []*models.WeatherData `json:"body,omitempty"`
}

// NewGetCitiesIDWeathersOK creates GetCitiesIDWeathersOK with default headers values
func NewGetCitiesIDWeathersOK() *GetCitiesIDWeathersOK {

	return &GetCitiesIDWeathersOK{}
}

// WithPayload adds the payload to the get cities Id weathers o k response
func (o *GetCitiesIDWeathersOK) WithPayload(payload []*models.WeatherData) *GetCitiesIDWeathersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cities Id weathers o k response
func (o *GetCitiesIDWeathersOK) SetPayload(payload []*models.WeatherData) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCitiesIDWeathersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.WeatherData, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetCitiesIDWeathersNotFoundCode is the HTTP code returned for type GetCitiesIDWeathersNotFound
const GetCitiesIDWeathersNotFoundCode int = 404

/*GetCitiesIDWeathersNotFound City not found

swagger:response getCitiesIdWeathersNotFound
*/
type GetCitiesIDWeathersNotFound struct {
}

// NewGetCitiesIDWeathersNotFound creates GetCitiesIDWeathersNotFound with default headers values
func NewGetCitiesIDWeathersNotFound() *GetCitiesIDWeathersNotFound {

	return &GetCitiesIDWeathersNotFound{}
}

// WriteResponse to the client
func (o *GetCitiesIDWeathersNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
